{
	"name": "DF_JOIN",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesDS",
						"type": "DatasetReference"
					},
					"name": "MOVIES"
				},
				{
					"dataset": {
						"referenceName": "MoviesDB",
						"type": "DatasetReference"
					},
					"name": "MoviesDB"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MoviesOutput",
						"type": "DatasetReference"
					},
					"name": "moviesoutput"
				}
			],
			"transformations": [
				{
					"name": "Moviesclean"
				},
				{
					"name": "joinmovies"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MOVIES",
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          RottenTomato as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesDB",
				"MOVIES derive(titleNew = toString((left(title,length(title)-6)))) ~> Moviesclean",
				"Moviesclean, MoviesDB join(titleNew == MoviesDB@title,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinmovies",
				"joinmovies select(mapColumn(",
				"          movieId,",
				"          title = MOVIES@title,",
				"          genres = MOVIES@genres,",
				"          movie,",
				"          title = MoviesDB@title,",
				"          genres = MoviesDB@genres,",
				"          year,",
				"          Rating,",
				"          RottenTomato",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> moviesoutput"
			]
		}
	}
}